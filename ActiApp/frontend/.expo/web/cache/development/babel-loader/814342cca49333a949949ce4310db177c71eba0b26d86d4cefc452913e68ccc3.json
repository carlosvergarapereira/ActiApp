{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\aplicacion\\\\ActiApp\\\\ActiApp\\\\frontend\\\\src\\\\context\\\\AuthContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { login as loginService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  const [user, setUser] = useState(null);\n  const [loadingAuth, setLoadingAuth] = useState(true);\n  const loadUser = async () => {\n    try {\n      const token = await AsyncStorage.getItem('token');\n      if (token) {\n        const userData = await loginService.validateToken(token);\n        setUser(userData.user);\n      }\n    } catch (error) {\n      console.error('❌ Error cargando usuario:', error);\n      setUser(null);\n    }\n    setLoadingAuth(false);\n  };\n  useEffect(() => {\n    loadUser();\n  }, []);\n  return _jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      loadingAuth\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","login","loginService","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","loadingAuth","setLoadingAuth","loadUser","token","getItem","userData","validateToken","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Asus/Documents/aplicacion/ActiApp/ActiApp/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { login as loginService } from '../services/authService'; \r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loadingAuth, setLoadingAuth] = useState(true);\r\n\r\n  const loadUser = async () => {\r\n    try {\r\n      const token = await AsyncStorage.getItem('token');\r\n      if (token) {\r\n        // Puedes hacer un endpoint /me en backend para traer el usuario por token\r\n        const userData = await loginService.validateToken(token);\r\n        setUser(userData.user);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error cargando usuario:', error);\r\n      setUser(null);\r\n    }\r\n    setLoadingAuth(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, loadingAuth }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,KAAK,IAAIC,YAAY,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,WAAW,GAAGR,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMc,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,KAAK,GAAG,MAAMb,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;MACjD,IAAID,KAAK,EAAE;QAET,MAAME,QAAQ,GAAG,MAAMb,YAAY,CAACc,aAAa,CAACH,KAAK,CAAC;QACxDJ,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;MACxB;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDR,OAAO,CAAC,IAAI,CAAC;IACf;IACAE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACda,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,OACER,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEZ,IAAI;MAAEC,OAAO;MAAEC;IAAY,CAAE;IAAAH,QAAA,EACzDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}